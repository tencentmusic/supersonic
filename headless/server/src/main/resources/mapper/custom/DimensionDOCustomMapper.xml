<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tencent.supersonic.headless.server.persistence.mapper.DimensionDOCustomMapper">
    <resultMap id="BaseResultMap" type="com.tencent.supersonic.headless.server.persistence.dataobject.DimensionDO">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="model_id" jdbcType="BIGINT" property="modelId"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="biz_name" jdbcType="VARCHAR" property="bizName"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <result column="sensitive_level" jdbcType="INTEGER" property="sensitiveLevel"/>
        <result column="type" jdbcType="VARCHAR" property="type"/>
        <result column="created_at" jdbcType="TIMESTAMP" property="createdAt"/>
        <result column="created_by" jdbcType="VARCHAR" property="createdBy"/>
        <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt"/>
        <result column="updated_by" jdbcType="VARCHAR" property="updatedBy"/>
        <result column="semantic_type" jdbcType="VARCHAR" property="semanticType"/>
        <result column="alias" jdbcType="VARCHAR" property="alias"/>
        <result column="default_values" jdbcType="VARCHAR" property="defaultValues"/>
        <result column="dim_value_maps" jdbcType="VARCHAR" property="dimValueMaps"/>
    </resultMap>
    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs"
               type="com.tencent.supersonic.headless.server.persistence.dataobject.DimensionDO">
        <result column="type_params" jdbcType="LONGVARCHAR" property="typeParams"/>
        <result column="expr" jdbcType="LONGVARCHAR" property="expr"/>
    </resultMap>


    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and
                                    #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem"
                                             open="(" separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
        id
        , name, biz_name, description, status, model_id, type, type_params, expr,
    created_at, created_by, updated_by, updated_at, semantic_type
    </sql>

    <insert id="batchInsert" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
        insert into s2_dimension (name, biz_name,
        description, status, model_id,
        type, type_params, expr,created_at, created_by,
        updated_by, updated_at, semantic_type,sensitive_level, is_tag, ext)
        values
        <foreach collection="list" item="dimension" separator=",">
            (#{dimension.name,jdbcType=VARCHAR}, #{dimension.bizName,jdbcType=VARCHAR},
            #{dimension.description,jdbcType=VARCHAR}, #{dimension.status,jdbcType=INTEGER},
            #{dimension.modelId,jdbcType=BIGINT},
            #{dimension.type,jdbcType=VARCHAR}, #{dimension.typeParams,jdbcType=VARCHAR},
            #{dimension.expr,jdbcType=VARCHAR}, #{dimension.createdAt,jdbcType=TIMESTAMP},
            #{dimension.createdBy,jdbcType=VARCHAR},
            #{dimension.updatedBy,jdbcType=VARCHAR}, #{dimension.updatedAt,jdbcType=TIMESTAMP},
            #{dimension.semanticType,jdbcType=VARCHAR},
            #{dimension.sensitiveLevel,jdbcType=INTEGER}, #{dimension.isTag, jdbcType=INTEGER},
            #{dimension.ext, jdbcType=VARCHAR})
        </foreach>
    </insert>

    <update id="batchUpdate" parameterType="java.util.List">
        <foreach collection="list" item="dimension" separator=";">
            update s2_dimension
            set
            <if test="dimension.name != null and dimension.name !=''">name = #{dimension.name,jdbcType=VARCHAR},</if>
            <if test="dimension.bizName != null and dimension.bizName !=''">biz_name =
                #{dimension.bizName,jdbcType=VARCHAR},
            </if>
            <if test="dimension.description != null and dimension.description !=''">description =
                #{dimension.description,jdbcType=VARCHAR},
            </if>
            <if test="dimension.status != null">status = #{dimension.status,jdbcType=INTEGER},</if>
            <if test="dimension.modelId != null">model_id = #{dimension.modelId,jdbcType=BIGINT},</if>
            <if test="dimension.type != null and dimension.type !=''">type = #{dimension.type,jdbcType=VARCHAR},</if>
            <if test="dimension.typeParams != null and dimension.typeParams !=''">type_params =
                #{dimension.typeParams,jdbcType=VARCHAR},
            </if>
            <if test="dimension.createdAt != null">created_at = #{dimension.createdAt,jdbcType=TIMESTAMP},</if>
            <if test="dimension.createdBy != null and dimension.createdBy !=''">created_by =
                #{dimension.createdBy,jdbcType=VARCHAR},
            </if>
            <if test="dimension.semanticType != null and dimension.semanticType !=''">semantic_type =
                #{dimension.semanticType,jdbcType=VARCHAR},
            </if>
            <if test="dimension.sensitiveLevel != null and dimension.sensitiveLevel !=''">sensitive_level =
                #{dimension.sensitiveLevel,jdbcType=INTEGER},
            </if>
            <if test="dimension.expr != null and dimension.expr !=''">expr = #{dimension.expr,jdbcType=LONGVARCHAR},
            </if>
            <if test="dimension.updatedBy != null and dimension.updatedBy !=''">updated_by =
                #{dimension.updatedBy,jdbcType=VARCHAR},
            </if>
            <if test="dimension.updatedAt != null">updated_at = #{dimension.updatedAt,jdbcType=TIMESTAMP}</if>
            where id = #{dimension.id,jdbcType=BIGINT}
        </foreach>
    </update>

    <update id="batchUpdateStatus" parameterType="java.util.List">
        <foreach collection="list" item="dimension" separator=";">
            update s2_dimension
            set
            status = #{dimension.status,jdbcType=INTEGER},
            updated_by = #{dimension.updatedBy,jdbcType=VARCHAR},
            updated_at = #{dimension.updatedAt,jdbcType=TIMESTAMP}
            where id = #{dimension.id,jdbcType=BIGINT}
        </foreach>
    </update>

    <select id="queryDimensions" resultMap="ResultMapWithBLOBs">
        select *
        from s2_dimension
        where status != 3
        <if test="modelIds != null and modelIds.size >0">
            and model_id in
            <foreach collection="modelIds" index="index" item="model" open="(" close=")"
                     separator=",">
                #{model}
            </foreach>
        </if>
        <if test="dimensionIds != null and dimensionIds.size >0">
            and id in
            <foreach collection="dimensionIds" index="index" item="dimensionId" open="(" close=")"
                     separator=",">
                #{dimensionId}
            </foreach>
        </if>
        <if test="dimensionNames != null and dimensionNames.size > 0">
            AND (
            (name IN
            <foreach collection="dimensionNames" index="index" item="dimensionName" open="(" close=")"
                     separator=",">
                #{dimensionName}
            </foreach>)
            OR
            (biz_name IN
            <foreach collection="dimensionNames" index="index" item="dimensionName" open="(" close=")"
                     separator=",">
                #{dimensionName}
            </foreach>)
            )
        </if>
    </select>


</mapper>
